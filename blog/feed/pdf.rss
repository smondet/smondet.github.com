<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
    <title>Seb's Blog: RSS feed for tag: pdf</title>
    <description></description>
    <link>http://seb.mondet.org/blog/</link>
    <lastBuildDate>Wed, 17 Aug 2011 21:13:07 +0200</lastBuildDate>
    <pubDate>Wed, 17 Aug 2011 21:13:07 +0200</pubDate>
    <item>
         <title>Hack Of The Day: PDF Versions And Printers</title>
         <description>&lt;div class="p"&gt;&lt;b&gt;The Problem:&lt;/b&gt; &lt;br/&gt;
 Your PDF file looks awsome on screen, but once you send it to your printer: 
&lt;ul&gt;
 &lt;li&gt; some UTF-8 characters are wrong, &lt;/li&gt;
&lt;li&gt; some vectorial drawings with transparency get wrong colors, or &lt;/li&gt;
&lt;li&gt; other figures get out of their bounding-boxes. &lt;/li&gt;
&lt;/ul&gt;
 I did a few experiments with a bunch of printers I have access to.  It seems that some of them simply do not handle the version 1.4 of the PDF &lt;i&gt;standard&lt;/i&gt; (which is, 10 damn' years old, also the basis for the &lt;a href="http://en.wikipedia.org/wiki/PDF/A"&gt;ISO 19005-1:2005&lt;/a&gt; standard, and of course  the version used by PDFLaTeX, XeLaTeX, Inkscape&amp;nbsp;&amp;hellip;).  &lt;/div&gt;
&lt;div class="p"&gt; &lt;b&gt;The Solution:&lt;/b&gt; &lt;br/&gt;
 Just use &lt;i&gt;Ghostscript&lt;/i&gt; to convert to PDF 1.2: &lt;pre&gt;
gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.2 \
  -dNOPAUSE -dQUIET -dBATCH
  -sOutputFile=FILE_OUT.pdf FILE_IN.pdf
&lt;/pre&gt; Or, if you think you're going to need it often: &lt;pre&gt;
pdfto12 () {
    if [ $# -ne 2 ]; then
        echo "usage: pdfto12 &amp;lt;pdf-in&amp;gt; &amp;lt;pdf-out&amp;gt;"
        return
    fi
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.2  \
       -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$2 $1
}
&lt;/pre&gt;  &lt;/div&gt;
</description>
         <link>http://seb.mondet.org/blog/post/hack-of-the-day-pdf-versions-and-printers.html</link>
         <guid>http://seb.mondet.org/blog/post/hack-of-the-day-pdf-versions-and-printers.html</guid>
         <pubDate>Mon, 18 Apr 2011 15:25:42 +0200</pubDate>
     </item>


    <item>
         <title>Quick And Dirty Web-Slides</title>
         <description>&lt;div class="p"&gt; Today's quick and dirty hack is about putting your presentation on-line as a list of images so that anyone can quickly see it without downloading the PDF. &lt;/div&gt;
&lt;div class="p"&gt;  First, be sure you start from something &amp;ldquo;clean&amp;rdquo;: &lt;pre&gt;
rm -fr slides/
mkdir -p slides/
&lt;/pre&gt; Then, use &lt;a href="http://www.imagemagick.org/"&gt;ImageMagick&lt;/a&gt; to convert your slides into images: &lt;pre&gt;
convert -density 200 Presentation.pdf \
    -resize 500x -quality 80 +adjoin slides/slide.png
&lt;/pre&gt; It creates numbered files &lt;tt&gt;slide-0.png&lt;/tt&gt;,&amp;nbsp;&amp;hellip; &lt;tt&gt;slide-42.png&lt;/tt&gt;. So we just create an HTML file containing all the images:  &lt;pre&gt;
nb=`\ls -1 --color=none slides/*.png | wc -l`
echo "&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;" &amp;gt; slides/index.html
for i in `seq 0 $[$nb - 1]` ; do
    echo "&amp;lt;img src=\"slide-$i.png\" /&amp;gt;" &amp;gt;&amp;gt; slides/index.html
done
echo "&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;" &amp;gt;&amp;gt; slides/index.html
&lt;/pre&gt; Here is an example (my latest talk): &lt;a href="http://smondet.at.ifi.uio.no/resources/Promiwag_SMondet_IFIPSec11.pdf"&gt;PDF&lt;/a&gt;, &lt;a href="http://smondet.at.ifi.uio.no/resources/Promiwag_SMondet_IFIPSec11/"&gt;HTML/PNG&lt;/a&gt;. &lt;/div&gt;
&lt;div class="p"&gt;  Adding the verbose &lt;tt&gt;DOCTYPE&lt;/tt&gt; stuff is left as exercise&amp;nbsp;&amp;hellip; ;) &lt;/div&gt;
&lt;div class="p"&gt;  &lt;/div&gt;
</description>
         <link>http://seb.mondet.org/blog/post/qad-slides-webpage.html</link>
         <guid>http://seb.mondet.org/blog/post/qad-slides-webpage.html</guid>
         <pubDate>Mon, 13 Jun 2011 15:16:47 +0200</pubDate>
     </item>
</channel>
</rss>
